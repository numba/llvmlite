v0.40.0 (May 1, 2023)
---------------------

This release predominantly upgrades to LLVM 14 and Python 3.11.
Bindings to a large number of passes are added.
The minimum supported Python version is now Python 3.8.

Note: A bug was discovered in LLVM's RuntimeDyldELF on the Aarch64 platform that
can cause segfaults when cross module symbols are linked. It is necessary
for JIT users to build LLVM with the patch added in 
`PR#926 <https://github.com/numba/llvmlite/pull/926>`_.

Pull-Requests:

* PR `#827 <https://github.com/numba/llvmlite/pull/827>`_: Add more LLVM pass bindings (`apmasell <https://github.com/apmasell>`_)
* PR `#830 <https://github.com/numba/llvmlite/pull/830>`_: Add LLVM 14 support (`apmasell <https://github.com/apmasell>`_)
* PR `#860 <https://github.com/numba/llvmlite/pull/860>`_: the git tag for the RC needs an rc1 suffix (`esc <https://github.com/esc>`_)
* PR `#869 <https://github.com/numba/llvmlite/pull/869>`_: bump max Python version to 3.11 (`esc <https://github.com/esc>`_ `sklam <https://github.com/sklam>`_)

* PR `#876 <https://github.com/numba/llvmlite/pull/876>`_: Remove ``llvmlite.llvmpy`` after deprecation (`apmasell <https://github.com/apmasell>`_)
* PR `#883 <https://github.com/numba/llvmlite/pull/883>`_: Adds support for calling functions with 'tail', 'notail', or 'musttail' markers. (`bslatkin <https://github.com/bslatkin>`_)
* PR `#886 <https://github.com/numba/llvmlite/pull/886>`_: Simplify setup.py Python version guard (`mbargull <https://github.com/mbargull>`_)
* PR `#892 <https://github.com/numba/llvmlite/pull/892>`_: Bump minimum supported Python version to 3.8 (`jamesobutler <https://github.com/jamesobutler>`_)
* PR `#893 <https://github.com/numba/llvmlite/pull/893>`_: Upgrade to ubuntu-20.04 for azure pipeline CI (`jamesobutler <https://github.com/jamesobutler>`_)
* PR `#899 <https://github.com/numba/llvmlite/pull/899>`_: Run Minconda install with bash (`gmarkall <https://github.com/gmarkall>`_)
* PR `#903 <https://github.com/numba/llvmlite/pull/903>`_: Fix flake8 config and style for flake8 6 (`gmarkall <https://github.com/gmarkall>`_)
* PR `#905 <https://github.com/numba/llvmlite/pull/905>`_: Add YouCompleteMe configuration file and ignore vim swap files (`gmarkall <https://github.com/gmarkall>`_)
* PR `#906 <https://github.com/numba/llvmlite/pull/906>`_: Replace importlib-resources legacy API use (`sklam <https://github.com/sklam>`_)
* PR `#910 <https://github.com/numba/llvmlite/pull/910>`_: Aarch64 split build for LLVM14 (`sklam <https://github.com/sklam>`_)
* PR `#921 <https://github.com/numba/llvmlite/pull/921>`_: Setup AzureCI to use py311 and llvm14  (`sklam <https://github.com/sklam>`_)
* PR `#922 <https://github.com/numba/llvmlite/pull/922>`_: Fix AzureCI not using llvm14 on windows (`sklam <https://github.com/sklam>`_)
* PR `#926 <https://github.com/numba/llvmlite/pull/926>`_: llvmdev recipe: Add patch that clears GOTOffsetMap (`apmasell <https://github.com/apmasell>`_ `gmarkall <https://github.com/gmarkall>`_ `sklam <https://github.com/sklam>`_)
* PR `#930 <https://github.com/numba/llvmlite/pull/930>`_: Update changelog for 0.40.0rc1  (`sklam <https://github.com/sklam>`_ `stuartarchibald <https://github.com/stuartarchibald>`_)
* PR `#931 <https://github.com/numba/llvmlite/pull/931>`_: Remove maximum Python version limit (`sklam <https://github.com/sklam>`_ `apmasell <https://github.com/apmasell>`_)
* PR `#932 <https://github.com/numba/llvmlite/pull/932>`_: Fix wheel builds (`sklam <https://github.com/sklam>`_)
* PR `#935 <https://github.com/numba/llvmlite/pull/935>`_: Disable zlib for LLVM on Windows (`apmasell <https://github.com/apmasell>`_)
* PR `#939 <https://github.com/numba/llvmlite/pull/939>`_: Bump llvmdev build number to include the nozlib change for windows (`sklam <https://github.com/sklam>`_)
* PR `#940 <https://github.com/numba/llvmlite/pull/940>`_: Update CHANGE_LOG for 0.40.0 final. (`stuartarchibald <https://github.com/stuartarchibald>`_)

Authors:

* `apmasell <https://github.com/apmasell>`_
* `bslatkin <https://github.com/bslatkin>`_
* `esc <https://github.com/esc>`_
* `gmarkall <https://github.com/gmarkall>`_
* `jamesobutler <https://github.com/jamesobutler>`_
* `mbargull <https://github.com/mbargull>`_
* `sklam <https://github.com/sklam>`_
* `stuartarchibald <https://github.com/stuartarchibald>`_

v0.39.1 (September 1, 2022)
---------------------------

This is a maintenance release to fix build issues on MacOS.

Pull-Requests:

* PR `#752 <https://github.com/numba/llvmlite/pull/752>`_: Skip test if libm is not found (`Siu Kwan Lam <https://github.com/sklam>`_)
* PR `#865 <https://github.com/numba/llvmlite/pull/865>`_: Move Azure to use macos-11 (`stuartarchibald <https://github.com/stuartarchibald>`_)
* PR `#874 <https://github.com/numba/llvmlite/pull/874>`_: Add zlib as a dependency for aarch64 (`esc <https://github.com/esc>`_)
* PR `#878 <https://github.com/numba/llvmlite/pull/878>`_: Update changelog (`Andre Masella <https://github.com/apmasell>`_)

v0.39.0 (July 25, 2022)
-----------------------

This release predominantly adds new features and improves functionality.

* It's now possible to directly set LLVM ``metadata`` on global variables.
* Functions and global variables now support the specification of a ``section``
  in which they should be placed.
* The attribute ``source_file`` had been added to the ``ModuleRef`` class, it
  returns the module's original file name.
* The FFI library binding to LLVM is now loaded with ``importlib`` to increase
  compatibility with other projects and improve start-up times.
* Linux builds now use the parallel option to ``make`` to speed up building the
  FFI library.
* Preliminary work to expose LLVM's optimization-remarks interface has been
  undertaken. The bindings are exposed and tested, but not yet documented for
  general use (additional work is needed).

Deprecations:

* The ``llvmlite.llvmpy`` module has been deprecated as the functionality it
  provides is available through the ``llvmlite.ir`` module. See the deprecation
  guide in the user documentation for details and recommendations regarding
  replacement.

Pull-Requests:

* PR `#328 <https://github.com/numba/llvmlite/pull/328>`_: Build C files separately on Linux and support parallel make (`Michał Górny <https://github.com/mgorny>`_)
* PR `#754 <https://github.com/numba/llvmlite/pull/754>`_: manylinux2014 aarch64 wheels with system compilers (`esc <https://github.com/esc>`_)
* PR `#760 <https://github.com/numba/llvmlite/pull/760>`_: add support for attaching metadata to global variables (`Graham Markall <https://github.com/gmarkall>`_ `John Törnblom <https://github.com/john-tornblom>`_)
* PR `#786 <https://github.com/numba/llvmlite/pull/786>`_: Update Windows and OSX CI images. (`stuartarchibald <https://github.com/stuartarchibald>`_)
* PR `#801 <https://github.com/numba/llvmlite/pull/801>`_: Update ffi.py (`franzhaas <https://github.com/franzhaas>`_)
* PR `#803 <https://github.com/numba/llvmlite/pull/803>`_: llvm::Module::GetSourceFileName (`J. Aaron Pendergrass <https://github.com/japendergrass>`_)
* PR `#806 <https://github.com/numba/llvmlite/pull/806>`_: Bump to v0.39.0dev (`esc <https://github.com/esc>`_)
* PR `#807 <https://github.com/numba/llvmlite/pull/807>`_: Exclude ExecutionEngine tests on linux 32 (`esc <https://github.com/esc>`_)
* PR `#809 <https://github.com/numba/llvmlite/pull/809>`_: Update CHANGE_LOG for 0.38.0 (`stuartarchibald <https://github.com/stuartarchibald>`_)
* PR `#813 <https://github.com/numba/llvmlite/pull/813>`_: Add m1 support to conda build scripts (`esc <https://github.com/esc>`_ `Stan Seibert <https://github.com/seibert>`_)
* PR `#815 <https://github.com/numba/llvmlite/pull/815>`_: update local references (`esc <https://github.com/esc>`_)
* PR `#816 <https://github.com/numba/llvmlite/pull/816>`_: remove configuration landscape service as it is no longer used (`esc <https://github.com/esc>`_)
* PR `#817 <https://github.com/numba/llvmlite/pull/817>`_: remove uppper limit on Python requires (`esc <https://github.com/esc>`_)
* PR `#819 <https://github.com/numba/llvmlite/pull/819>`_: adding rc and final release checklist templates (`esc <https://github.com/esc>`_)
* PR `#823 <https://github.com/numba/llvmlite/pull/823>`_: Add section to globals (`Andreas Wrisley <https://github.com/anlofw>`_)
* PR `#824 <https://github.com/numba/llvmlite/pull/824>`_: add GitHub URL for PyPi (`Andrii Oriekhov <https://github.com/andriyor>`_)
* PR `#825 <https://github.com/numba/llvmlite/pull/825>`_: Add flag handling to more instructions. (`stuartarchibald <https://github.com/stuartarchibald>`_ `Andre Masella <https://github.com/apmasell>`_)
* PR `#826 <https://github.com/numba/llvmlite/pull/826>`_: Deprecated `llvmlite.llvmpy` (`Andre Masella <https://github.com/apmasell>`_)
* PR `#831 <https://github.com/numba/llvmlite/pull/831>`_: Format C++ code (`Andre Masella <https://github.com/apmasell>`_)
* PR `#832 <https://github.com/numba/llvmlite/pull/832>`_: DOC: Fix the syntax for the llvmlite discourse topic link. (`stuartarchibald <https://github.com/stuartarchibald>`_)
* PR `#835 <https://github.com/numba/llvmlite/pull/835>`_: Add pre-commit hooks for clang-format (`Andre Masella <https://github.com/apmasell>`_)
* PR `#837 <https://github.com/numba/llvmlite/pull/837>`_: Add support for optimization remarks in pass managers (`Siu Kwan Lam <https://github.com/sklam>`_ `Andre Masella <https://github.com/apmasell>`_)
* PR `#846 <https://github.com/numba/llvmlite/pull/846>`_: Cherry-Pick: #842 --> `main` :Changelog for 0.38.1 (`esc <https://github.com/esc>`_)
* PR `#851 <https://github.com/numba/llvmlite/pull/851>`_: adding the llvm_11_consecutive_registers.patch (`esc <https://github.com/esc>`_)
* PR `#857 <https://github.com/numba/llvmlite/pull/857>`_: Delegate passmanager remarks methods (`Andre Masella <https://github.com/apmasell>`_)
* PR `#858 <https://github.com/numba/llvmlite/pull/858>`_: Update CHANGE_LOG for 0.39.0 (`esc <https://github.com/esc>`_ `Graham Markall <https://github.com/gmarkall>`_ `stuartarchibald <https://github.com/stuartarchibald>`_)
* PR `#863 <https://github.com/numba/llvmlite/pull/863>`_: Update changelog for 0.39.0 release (`Siu Kwan Lam <https://github.com/sklam>`_)
* PR `#864 <https://github.com/numba/llvmlite/pull/864>`_: Update release date for 0.39.0 release. (`stuartarchibald <https://github.com/stuartarchibald>`_)
* PR `#867 <https://github.com/numba/llvmlite/pull/867>`_: Update CHANGE_LOG 0.39.0 final. (`stuartarchibald <https://github.com/stuartarchibald>`_)

Authors:

* `Andrii Oriekhov <https://github.com/andriyor>`_
* `Andreas Wrisley <https://github.com/anlofw>`_
* `Andre Masella <https://github.com/apmasell>`_
* `esc <https://github.com/esc>`_
* `franzhaas <https://github.com/franzhaas>`_
* `Graham Markall <https://github.com/gmarkall>`_
* `J. Aaron Pendergrass <https://github.com/japendergrass>`_
* `John Törnblom <https://github.com/john-tornblom>`_
* `Michał Górny <https://github.com/mgorny>`_
* `Stan Seibert <https://github.com/seibert>`_
* `Siu Kwan Lam <https://github.com/sklam>`_
* `stuartarchibald <https://github.com/stuartarchibald>`_

v0.38.1 (May 19, 2022)
----------------------

This is a maintenance release to support the Apple M1 architecture.

Pull-Requests:

* PR `#841 <https://github.com/numba/llvmlite/pull/841>`_: Merge pull request #813 from seibert/m1_support (`esc <https://github.com/esc>`_, `Stan Seibert <https://github.com/seibert>`_)
* PR `#845 <https://github.com/numba/llvmlite/pull/845>`_: Backport #786 for 0.38.1 (`stuartarchibald <https://github.com/stuartarchibald>`_)

Authors:

* `esc <https://github.com/esc>`_
* `Stan Seibert <https://github.com/seibert>`_
* `stuartarchibald <https://github.com/stuartarchibald>`_

v0.38.0 (January 13, 2022)
--------------------------

This release makes llvmlite compatible with Python 3.10. It also adds an
``abiname`` option to the target machine creation interface that mimics the same
in LLVM. Further, a large number of functions are added to the IR API to support
common uses of constant expressions. Finally, a number of bugs were fixed!

Pull-Requests:

* PR `#702 <https://github.com/numba/llvmlite/pull/702>`_: Implement minimal support for call-site argument attributes (`David Nadlinger <https://github.com/dnadlinger>`_)
* PR `#739 <https://github.com/numba/llvmlite/pull/739>`_: Bump to 0.38.0 development series (`Siu Kwan Lam <https://github.com/sklam>`_)
* PR `#751 <https://github.com/numba/llvmlite/pull/751>`_: Fix encoding of unicode string in metadata. (`Siu Kwan Lam <https://github.com/sklam>`_)
* PR `#757 <https://github.com/numba/llvmlite/pull/757>`_: Add issue templates based on those in Numba (`Graham Markall <https://github.com/gmarkall>`_)
* PR `#763 <https://github.com/numba/llvmlite/pull/763>`_: Update the Azure default linux image to Ubuntu 18.04 (`stuartarchibald <https://github.com/stuartarchibald>`_)
* PR `#769 <https://github.com/numba/llvmlite/pull/769>`_: Python 3.10 (`esc <https://github.com/esc>`_)
* PR `#771 <https://github.com/numba/llvmlite/pull/771>`_: cleanup llvmlite metadata (`esc <https://github.com/esc>`_)
* PR `#774 <https://github.com/numba/llvmlite/pull/774>`_: Fix OSX breakage on master (`esc <https://github.com/esc>`_)
* PR `#775 <https://github.com/numba/llvmlite/pull/775>`_: targets.py: Add ABIName parameter for RISC-V hard float targets (`Graham Markall <https://github.com/gmarkall>`_ `occheung <https://github.com/occheung>`_)
* PR `#778 <https://github.com/numba/llvmlite/pull/778>`_: fix: test code typo (`Itmom <https://github.com/Cho-Geonwoo>`_)
* PR `#779 <https://github.com/numba/llvmlite/pull/779>`_: pin compiler toolchain to version 10 on osx (`esc <https://github.com/esc>`_)
* PR `#784 <https://github.com/numba/llvmlite/pull/784>`_: Adds _ConstOpMixin.ptrtoint to complement existing bitcast and inttoptr methods. (`Brett Slatkin <https://github.com/bslatkin>`_)
* PR `#788 <https://github.com/numba/llvmlite/pull/788>`_: Add RISC-V + all default targets to LLVM build (`Stan Seibert <https://github.com/seibert>`_ `esc <https://github.com/esc>`_)
* PR `#789 <https://github.com/numba/llvmlite/pull/789>`_: don't build docs on every platform, only once (`esc <https://github.com/esc>`_)
* PR `#791 <https://github.com/numba/llvmlite/pull/791>`_: update to use LLVM 11.1.0 build 4 (`esc <https://github.com/esc>`_)
* PR `#795 <https://github.com/numba/llvmlite/pull/795>`_: Continue PR #735 (Add support for more constant expressions) (`Graham Markall <https://github.com/gmarkall>`_ `John Törnblom <https://github.com/john-tornblom>`_)
* PR `#797 <https://github.com/numba/llvmlite/pull/797>`_: Make tests that require cross compilation to RISCV optional. (`stuartarchibald <https://github.com/stuartarchibald>`_)

Authors:

* `Itmom <https://github.com/Cho-Geonwoo>`_
* `Brett Slatkin <https://github.com/bslatkin>`_
* `David Nadlinger <https://github.com/dnadlinger>`_
* `esc <https://github.com/esc>`_
* `Graham Markall <https://github.com/gmarkall>`_
* `John Törnblom <https://github.com/john-tornblom>`_
* `occheung <https://github.com/occheung>`_
* `Stan Seibert <https://github.com/seibert>`_
* `Siu Kwan Lam <https://github.com/sklam>`_
* `stuartarchibald <https://github.com/stuartarchibald>`_

v0.37.0 (August 19, 2021)
-------------------------

The biggest new feature in this release is LLVM 11 support for all platforms!
This is important, because the ``aarch64`` platform had been 'stuck' on LLVM 9
for several releases. A special thanks to David Spickett from Linaro for
supplying the relevant patch.

Pull-Requests:

* PR `#711 <https://github.com/numba/llvmlite/pull/711>`_: Use conda for readthedocs with Python 3.9 (`Antoine Pitrou <https://github.com/pitrou>`_ `esc <https://github.com/esc>`_)
* PR `#715 <https://github.com/numba/llvmlite/pull/715>`_: LLVM 11.1.0 (`Ivan Butygin <https://github.com/Hardcode84>`_ `esc <https://github.com/esc>`_)
* PR `#726 <https://github.com/numba/llvmlite/pull/726>`_: Disallow alwaysinline and noinline on functions (`Graham Markall <https://github.com/gmarkall>`_)
* PR `#730 <https://github.com/numba/llvmlite/pull/730>`_: Don't export LLVM symbols when linking statically (`Chris Burr <https://github.com/chrisburr>`_ `esc <https://github.com/esc>`_)
* PR `#732 <https://github.com/numba/llvmlite/pull/732>`_: Docs/remove travis (`esc <https://github.com/esc>`_)
* PR `#734 <https://github.com/numba/llvmlite/pull/734>`_: bump llvmdev to 11 (`esc <https://github.com/esc>`_)
* PR `#736 <https://github.com/numba/llvmlite/pull/736>`_: manylinux llvmdev upgrade to LLVM 11 / manylinux2010 to manylinux2014 upgrade (`esc <https://github.com/esc>`_)
* PR `#747 <https://github.com/numba/llvmlite/pull/747>`_: Remove 3.6 Support (`esc <https://github.com/esc>`_)
* PR `#748 <https://github.com/numba/llvmlite/pull/748>`_: Fixup readme (`esc <https://github.com/esc>`_)
* PR `#749 <https://github.com/numba/llvmlite/pull/749>`_: adding PRs specific to the RC2 release (`esc <https://github.com/esc>`_)
* PR `#762 <https://github.com/numba/llvmlite/pull/762>`_: PR #758 continued. Ensure GCC7 is used on non-ARM platforms. (`esc <https://github.com/esc>`_ `stuartarchibald <https://github.com/stuartarchibald>`_)
* PR `#764 <https://github.com/numba/llvmlite/pull/764>`_: Update CHANGE_LOG for 0.37.0 (`stuartarchibald <https://github.com/stuartarchibald>`_)

Authors:

* `Ivan Butygin <https://github.com/Hardcode84>`_
* `Chris Burr <https://github.com/chrisburr>`_
* `esc <https://github.com/esc>`_
* `Graham Markall <https://github.com/gmarkall>`_
* `Antoine Pitrou <https://github.com/pitrou>`_
* `Siu Kwan Lam <https://github.com/sklam>`_
* `stuartarchibald <https://github.com/stuartarchibald>`_

v0.36.0 (March 11, 2021)
------------------------

The main feature in this release is Python 3.9 support. Also, some changes to
the build scripts were included: the llvmdev recipe now supports compilation on
Windows 10 and llvmlite may now be compiled with cmake on POSIX systems.
Additionally, both the timings from the LLVM passes themselves and the time
spent within the LLVM thread-safe access lock are now available for diagnostic
purposes. Lastly, several minor cosmetic changes to the documentation and
project files are included.

Pull requests:

* PR #624: Expose pass timings
* PR #655: Switch encoding to UTF-8 from latin1
* PR #662: Delete ``requirements.txt``
* PR #666: fix rst syntax in install docs
* PR #668: Modify cmake options to work with VS2019
* PR #670: Llvmdev windows 10
* PR #671: Python 3.9 support
* PR #673: use build 2 on windows
* PR #677: Support building with CMake on posix systems
* PR #682: slight rearrangement of intro
* PR #685: Added fneg instruction
* PR #687: Cleanup public CI configuration and badge
* PR #689: fixup azure badge to point at master branch
* PR #690: Callback to track when the llvm lock is acquired and released
* PR #699: adapt Python version clamp from Numba
* PR #701: Improve llvm not found error

Authors:

* Graham Markall
* John Kirkham
* Peter-Jan Gootzen
* Siu Kwan Lam (core dev)
* Stan Seibert (core dev)
* Stuart Archibald (core dev)
* Uwe L. Korn
* Valentin Haenel (core dev)
* ``@ARF1``
* ``@abebeos``
* ``@0x5h4un``

v0.35.0 (November 30, 2020)
---------------------------

The main feature in this release is a Numba specific LLVM pass for pruning
reference-count operations. We plan to generalize this custom LLVM pass
once it is proven stable so that it can be configured for other uses.
In addition, this release contains an updated SVML patch that fixes an issue
for AVX512, and a patch that fixes build issues on Linux and BSD.

Pull requests:

* PR #617: Fix wheel building.
* PR #618: Fix changelog on master
* PR #626: Update SVML patch
* PR #627: Always build with -fPIC on Linux and BSD
* PR #633: Fix Issue #632 - obj file section contents truncated
* PR #634: Implement reference count pruner LLVM pass
* PR #635: Fixes #629: Default to 0 if None is passed as a value for Int32
* PR #637: Fix appveyor
* PR #640: Backport llvm refop pass for LLVM 9.
* PR #641: fix llvmdev build number
* PR #642: pin to correct version of llvmdev
* PR #644: Fix refprune fanout_raise case getting stuck on large graphs
* PR #647: Add support for general attrs on call and loop-rotate pass

Authors:

* Graham Markall
* Ivan Butygin
* NavyaZaveri
* Siu Kwan Lam (core dev)
* Stuart Archibald (core dev)
* Valentin Haenel (core dev)

v0.34.0 (August 12, 2020)
-------------------------

This release upgrades to LLVM 10 (10.0.1) for all platforms except `aarch64`
which will remain at LLVM 9 (9.0.1).

Pull requests:

* PR #596: Use std::make_unique on LLVM 10 (Cherry-Pick via #599)
* PR #606: Revert "Fix CUDA with LLVM9" (Cherry-Pick via #599)
* PR #599: LLVM 10
* PR #598: Fix flake in setup.py
* PR #602: add missing targets to wheels
* PR #614: Fix wheel building
* PR #616: fix release date in changelog

Authors:

* Graham Markall
* Michał Górny
* Siu Kwan Lam  (core dev)
* Stuart Archibald  (core dev)
* Valentin Haenel  (core dev)

v0.33.0 (June 10, 2020)
-----------------------

This release upgrades to LLVM 9 and drops support for older LLVM versions.

Pull requests:

* PR #593: Fix CUDA with LLVM9
* PR #592: Fix meta.yaml
* PR #591: buildscripts: Unpin wheel
* PR #590: add python_requires to setup.py
* PR #582: Adds override for LLVM version check, re-formats docs.
* PR #581: Add FAQ entry on LLVM version support.
* PR #580: Trove classifiers may be out of date.
* PR #577: llvmlite wheel building fixes
* PR #575: Update the release date
* PR #548: Upgrade to LLVM9
* PR #521: Allow instructions to be removed from blocks

Authors:

* Graham Markall
* Jan Vesely
* Siu Kwan Lam  (core dev)
* Stuart Archibald  (core dev)
* Tim Babb
* Valentin Haenel  (core dev)


v0.32.1 (May 7, 2020)
---------------------

This is a small patch release that addresses some packaging issues:

Pull requests:

* PR 580: Trove classifiers may be out of date.
* PR 581: Add FAQ entry on LLVM version support.
* PR 582: Adds override for LLVM version check, re-formats docs.

Authors:

* Stuart Archibald (core dev)
* Valentin Haenel (core dev)


v0.32.0 (Apr 16, 2020)
----------------------

The main changes in this release are the removal of specific code for Python 2
and Python <3.6, and making the code base PEP8 compliant.

Pull requests:

* PR #577: llvmlite wheel building fixes
* PR #560: ENH: Better error message
* PR #558: update install docs
* PR #556: binding: Allow empty features list
* PR #555: travis: Cleanup
* PR #554: azure-pipelines: Bump VM images.
* PR #552: Add paragraph on installing from sdist and on non-traditional
  platforms.
* PR #551: Remove python 2, python < 3.6, fix up, add flake8
* PR #549: Miscalled method and missing parameter in the documentation
* PR #547: Permit building on Visual Studio 2017
* PR #543: Update error message in LLVM version check.
* PR #540: update to final release date for 0.31.0

Authors:

* Arik Funke
* Eric Larson
* Jan Vesely
* Shan Sikdar
* Siu Kwan Lam  (core dev)
* Stan Seibert (core dev)
* Stuart Archibald (core dev)
* Vladislav Hrčka


v0.31.0 (Jan 2, 2020)
---------------------

This release switches memset/memcpy to use the 4 argument style as per LLVM 7+
and updates some documentation.

Commits:

* PR #485: Revert "Revert "LLVM 7 changed memset intrinsic signature, adjust
  it""
* PR #520: Begin development of 0.31.0
* PR #528: Add cttz and ctlz to irbuilder docs.
* PR #533: Update deprecation docs with full deprecation of 5 arg memset/memcpy
* PR #535: Update docs to not report LLVM 3.8 as latest!

Authors:

* Isaac Virshup
* Siu Kwan Lam (core dev)
* Stuart Archibald (core dev)


v0.30.0 (Oct 9, 2019)
---------------------

This release adds support for half-precision float and schedules the
deprecation of memset/memcpy accepting 5 arguments (cf. LLVM change).

* PR #518: Fix use of -fPIC flag in wheels
* PR #513: Remove restriction on sphinx version from Anaconda distro
* PR #512: fix for block labels which contain "interesting" characters
* PR #511: Deprecate the use of memset/memcpy with alias
* PR #510: Add fp16 Intrinsics
* PR #509: Add Half-Precision Type
* PR #502: Add -fPIC flag for manylinux1 wheel building
* PR #491: Fix incorrect hierarchy in the documentation for ir.Constant.
* PR #474: Update docs
* PR #470: Fix leak on string returning APIs.


v0.29.0 (May 29, 2019)
----------------------

This release upgrades to LLVM 8.0 for all supported platforms except PPC64LE.
Due to numerous problems with LLVM 8.0 running on PPC64LE,
we have decided to use LLVM 7.1, which is more stable on PPC64LE.
In addition, non-host LLVM targets, AMDGPU, NVPTX, and WebAssembly, are enabled
and they are available in our `llvmlite` builds.

* PR #484: Revert "LLVM 7 changed memset intrinsic signature, adjust it"
* PR #483: Depend on enum34 using PEP 508 environment markers
* PR #478: Upgrade to llvm8
* PR #469: Support loading from current directory and egg files
* PR #467: Add missing fastmath flags from LLVM 7
* PR #460: LLVM 7 changed memset intrinsic signature, adjust it


v0.28.0 (Mar 12, 2019)
----------------------

This release adds a number of community contributed features, including
support for vector types, as well as atomic loads and stores.

* PR #322: Adding Vector Type
* PR #389: Add symbols from static object files
* PR #417: Add support for atomic loads/stores
* PR #422: Normalize replace_* behaviour and add docs
* PR #426: Fix pickling of IR functions and add tests
* PR #444: Setup manylinux1 buildscripts and CI
* PR #446: Document need for -p1 argument to patch command
* PR #448: Fix "SyntaxWarning: invalid escape sequence \d"
* PR #449: Consolidate the two vector type PRs
* PR #452: Some adjustments to pr426
* PR #454: Truncate long label names when adding label suffix.
* PR #458: Add changelog info about v0.27.1


v0.27.1 (Feb 1, 2019)
---------------------

Bugfix release for invalid wheel hash for OSX packages.
No change to source code.


v0.27.0 (Dec 28, 2018)
----------------------

This release updates llvmlite to LLVM 7.  Note that LLVM 7.0.0 contains
a critical bug that is resolved with a patch included in the `llvmdev conda
package recipe`_.  The final release of LLVM 7.0.1 may also resolve the issue.

* PR #434: Add another thread for RPi builds.
* PR #430: llvm lld integration, merge #428
* PR #428: Build LLD as part of the llvmdev package
* PR #413: Set up CI with Azure Pipelines
* PR #412: LLVM 7 support

.. _llvmdev conda package recipe: https://github.com/numba/llvmlite/tree/69aed71a829e6c552cca24a28c42abdf1efd2363/conda-recipes/llvmdev


v0.26.0 (Nov 27, 2018)
----------------------

The primary new features in this release is support for generation of Intel
JIT events, which makes profiling of JIT compiled code in Intel VTune
possible.  This release also contains some minor build improvements for ARMv7,
and some small fixes.

LLVM 7 support was originally slated for this release, but had to be delayed
after some issues arose in testing.  LLVM 6 is still required for llvmlite.

* PR #409: Use native cmake on armv7l
* PR #407: Throttle thread count for llvm build on armv7l.
* PR #403: Add shutdown detection to ObjectRef __del__ method.
* PR #400: conda recipe: add make as build dep
* PR #399: Add get_element_offset to TargetData
* PR #398: Fix gep method call on Constant objects
* PR #395: Fix typo in irbuilder documentation
* PR #394: Enable IntelJIT events for LLVM for VTune support


v0.25.0 (Sep 18, 2018)
----------------------

This release adds support for the FMA instruction, and has some documentation
and build improvements.  Starting with this release, we are including
ARMv8 (AArch64) testig in our CI process.

* PR #391: Fix broken win32 py2.7 build.
* PR #387: protect against empty features in list
* PR #384: Read CMAKE_GENERATOR which conda-build sets
* PR #382: rewrite of install instructions, calling out LLVM build challenges
* PR #380: Add FMA intrinsic support
* PR #379: ARM aarch64 test on jetson tx2
* PR #378: add slack, drop flowdock


v0.24.0 (Jul 6, 2018)
---------------------

This release adds support for Python 3.7 and fixes some build issues. It also
contains an updated SVML patch for the llvmdev package that works around some
vectorization issues. It also adds a selective LLVM 6.0.1 llvmdev build for the
`ppc64le` architecture.

* PR #374: Fix up broken patch selector
* PR #373: Add long description from readme
* PR #371: LLVM 6.0.1 build based on RC and fixes for PPC64LE
* PR #369: Recipe fixes for Conda Build 3
* PR #363: Workaround for incorrect vectorization factor computed for SVML
  functions
* PR #356: fix build on OpenBSD.
* PR #351: Python 3.7 compat: Properly escape repl in re.sub


v0.23.2 (Jun 1, 2018)
---------------------

This is a bug fix release to assist in addressing a critical Numba issue that
can affect users who download llvmlite packages from sources other than PyPI
(pip), Anaconda, or Intel Python: https://github.com/numba/numba/issues/3006

Support for SVML is now detected at compile time and baked into a function that
is exposed by llvmlite. This function can be queried at runtime to find out if
SVML is supported by the LLVM that llvmlite was compiled against, code
generation paths can then be adjusted accordingly.

The following PRs are closed in this release:

* PR #361: Add SVML detection and a function to declare support.


v0.23.1 (May 17, 2018)
----------------------

This is a minor patch release that includes no code changes. It is issued to
fix a couple of problems with the build recipes for llvmdev (on which llvmlite
relies).

The following PRs are closed in this release:

* PR #353: PR Fix llvmdev build recipe.
* PR #348: llvmdev: enhancements to conda recipe


v0.23.0 (Apr 24, 2018)
----------------------

In this release, we upgrade to LLVM 6. Two LLVM patches are added:

  1. A patch to fix LLVM bug (https://bugs.llvm.org/show_bug.cgi?id=37019) that
     causes undefined behavior during CFG printing.
  2. A patch to enable Intel SVML auto-vectorization of transcendentals.

The following PRs are closed in this release:

* PR #343: Fix undefined behavior bug due to Twine usage in LLVM
* PR #340: This moves llvmlite to use LLVM 6.0.0 as its backend.
* PR #339: Add cttz & ctlz
* PR #338: Add 3 Bit Manipulation Intrinsics
* PR #330: Add support for LLVM fence instruction
* PR #326: Enable Intel SVML-enabled auto-vectorization for all the
           transcendentals


v0.22.0 (Feb 15, 2018)
----------------------

In this release, we have changed the locking strategy that protects LLVM from
race conditions.  Before, the llvmlite user (like Numba) was responsible for
this locking.  Now, llvmlite imposes a global thread lock on all calls into
the LLVM API.  This should be significantly less error prone.  Future llvmlite
releases may manually exempt some functions from locking once they are
determined to be thread-safe.

The following PRs are closed in this release:

* PR#318: Ensuring threadsafety in concurrent usage of LLVM C-API
* PR#221: Add all function/return value attributes from LLVM 3.9
* PR#304: Expose support for static constructors/destructors


v0.21.0 (Dec 6, 2017)
---------------------

In this release, we upgrade to LLVM 5.  Our build scripts now use
conda-build 3.  For our prebuilt binaries, GCC 7 toolchain is used
on unix-like systems and the OSX minimum deployment target is 10.9.

The following PRs are closed in this release:

* PR #315: Updates for conda build 3.
* PR #307: Fixes for LLVM5.
* PR #306: Working towards LLVM 5.0 support.


v0.20.0 (Sep 6, 2017)
---------------------

Beginning with this minor release, we support wheels for Linux, OSX and Windows.
Pull requests related to enabling wheels are #294, #295, #296 and #297.
There are also fixes to the documentation (#283 and #289).


v0.19.0 (Jul 6, 2017)
---------------------

This is a minor release with the following fixes.

* PR #281, Issue #280: Fix GEP addrspace issue
* PR #279: Fix #274 addrspace in gep
* PR #278: add Readthedocs badge
* PR #275: Add variables to pass through when doing conda-build
* PR #273: Fix the behavior of module.get_global
* PR #272: cmpop contains comparison type, not lhs
* PR #268, Fix #267: Support packed struct

The following are CI build related changes:

* PR #277: Add pass through gcc flags for llvmdev
* PR #276: Remove jenkins build scripts


v0.18.0 (May 4, 2017)
---------------------

This is a minor release that fixes several issues (#263, #262, #258, #237) with
the wheel build.  In addition, we have minor fixes for running on PPC64LE
platforms (#261).  And, we added CI testing against PyPy (#253).


v0.17.1 (Apr 12, 2017)
----------------------

This is a bugfix release that addresses issue #258 that our LLVM
binding shared library is missing from the wheel builds.


v0.17.0 (Apr 9, 2017)
---------------------

In this release, we are upgrading to LLVM 4.0.  We are also starting to
provide wheel packages for 64-bit Linux platforms (manylinux).

Fixes:

* Issue #249, PR #250: Disable static linking of libstdc++ by default.

Enhancements:

* PR #246: Add requirements.txt for pip dependency resolving
* PR #238: LLVM 4.0
* PR #222: Enable wheel builds


v0.16.0 (Feb 16, 2017)
----------------------

API changes:

* Switched from LLVM 3.8 to 3.9
* ``TargetData.add_pass`` is removed in LLVM 3.9.

Enhancements:

* PR #239: Enable fastmath flags
* PR #233: Updates for llvm3.9.1
* PR #199: Update for changes in LLVM 3.9

Fixes:

* PR #236: Fix metadata with long value
* PR #231: Fix setup.py for Python2.7 so that pip auto installs dependencies
* PR #226: Fix get_host_cpu_features() so that it fails properly


v0.15.0 (Dec 20, 2016)
----------------------

Enhancements:

* PR #213: Add partial LLVM bindings for ObjectFile.
* PR #215: Add inline assembly helpers in the builder.
* PR #216: Allow specifying alignment in alloca instructions.
* PR #219: Remove unnecessary verify in module linkage.

Fixes:

* PR #209, Issue #208: Fix overly restrictive test for library filenames.


v0.14.0 (Oct 17, 2016)
----------------------

Enhancements:

* PR #104: Add binding to get and view function control-flow graph.
* PR #210: Improve llvmdev recipe.
* PR #212: Add initializer for the native assembly parser.


v0.13.0 (Aug 24, 2016)
----------------------

Enhancements:

* PR #176: Switch from LLVM 3.7 to LLVM 3.8.
* PR #191: Allow setting the alignment of a global variable.
* PR #198: Add missing function attributes.
* PR #160: Escape the contents of metadata strings, to allow embedding
  any characters.
* PR #162: Add support for creating debug information nodes.
* PR #200: Improve the usability of metadata emission APIs.
* PR #200: Allow calling functions with metadata arguments
  (such as ``@llvm.dbg.declare``).

Fixes:

* PR #190: Suppress optimization remarks printed out in some cases by LLVM.
* PR #200: Allow attaching metadata to a ``ret`` instruction.


v0.12.1 (Jul 12, 2016)
----------------------

New release to fix packages on PyPI. Same as v0.12.0.


v0.12.0 (Jul 6, 2016)
---------------------

Enhancements:

* PR #179: Let llvmlite build on armv7l Linux.
* PR #161: Allow adding metadata to functions.
* PR #163: Allow emitting fast-math ``fcmp`` instructions.
* PR #159: Allow emitting verbose assembly in TargetMachine.

Fixes:

* Issue #177: Make setup.py compatible with ``pip install``.

v0.11.0 (May 19, 2016)
----------------------

Enhancements:

* PR #175: Check LLVM version at build time
* PR #169: Default initializer for non-external global variable
* PR #168: add ir.Constant.literal_array()


v0.10.0 (Mar 31, 2016)
----------------------

Enhancements:

* PR #146: Improve ``setup.py clean`` to wipe more leftovers.
* PR #135: Remove some llvmpy compatibility APIs.
* PR #151: Always copy TargetData when adding to a pass manager.
* PR #148: Make errors more explicit on loading the binding DLL.
* PR #144: Allow overriding ``-flto`` in Linux builds.
* PR #136: Remove Python 2.6 and 3.3 compatibility.
* Issue #131: Allow easier creation of constants by making type instances
  callable.
* Issue #130: The test suite now ensures the runtime DLL dependencies
  are within a certain expected set.
* Issue #121: Simplify build process on Unix and remove hardcoded linking
  with LLVMOProfileJIT.
* Issue #125: Speed up formatting of raw array constants.

Fixes:

* PR #155: Properly emit IR for metadata null.
* PR #153: Remove deprecated uses of ``TargetMachine::getDataLayout()``.
* PR #156: Move personality from LandingPadInstr to FunctionAttributes.
  It was moved in LLVM 3.7.
* PR #149: Implement LLVM scoping correctly.
* PR #141: Ensure no CMakeCache.txt file is included in sdist.
* PR #132: Correct constant in ``llvmir.py`` example.

v0.9.0 (Feb 29, 2016)
---------------------

Enhancements:

* PR #73: Add get_process_triple() and get_host_cpu_features()
* Switch from LLVM 3.6 to LLVM 3.7.  The generated IR for some memory
  operations has changed.
* Improved performance of IR serialization.
* Issue #116: improve error message when the operands of a binop have
  differing types.
* PR #113: Let Type.get_abi_{size,alignment} not choke on identified types.
* PR #112: Support non-alphanumeric characters in type names.

Fixes:

* Remove the libcurses dependency on Linux.

v0.8.0 (Oct 23, 2015)
---------------------

* Update LLVM to 3.6.2
* Add an *align* parameter to IRBuilder.load() and IRBuilder.store().
* Allow setting visibility, DLL storageclass of ValueRef
* Support profiling with OProfile

v0.7.0 (Aug 31, 2015)
---------------------

* PR #88: Provide hooks into the MCJIT object cache
* PR #87: Add indirect branches and exception handling APIs to ir.Builder.
* PR #86: Add ir.Builder APIs for integer arithmetic with overflow
* Issue #76: Fix non-Windows builds when LLVM was built using CMake
* Deprecate .get_pointer_to_global() and add .get_function_address() and
  .get_global_value_address() in ExecutionEngine.

v0.6.0 (Jun 30, 2015)
---------------------

Enhancements:

* Switch from LLVM 3.5 to LLVM 3.6.  The generated IR for metadata nodes
  has slightly changed, and the "old JIT" engine has been remove (only
  MCJIT is now available).
* Add an optional flags argument to arithmetic instructions on IRBuilder.
* Support attributes on the return type of a function.


v0.5.1 (Jun 8, 2015)
--------------------

Fixes:

* Fix implicit termination of basic block in nested if_then()


v0.5.0 (May 27, 2015)
---------------------

New documentation hosted at http://llvmlite.pydata.org

Enhancements:

* Add code-generation helpers from numba.cgutils
* Support for memset, memcpy, memmove intrinsics

Fixes:

* Fix string encoding problem when round-triping parse_assembly()


v0.4.0 (Mar 30, 2015)
---------------------

Enhancements:

* Add Module.get_global()
* Renamd Module.global_variables to Module.global_values
* Support loading library parmanently
* Add Type.get_abi_alignment()

Fixes:

* Expose LLVM version as a tuple

Patched LLVM 3.5.1:
Updated to 3.5.1 with the same ELF relocation patched for v0.2.2.


v0.2.2 (Jan 29, 2015)
---------------------

Enhancements:

* Support for addrspacescast
* Support for tail call, calling convention attribute
* Support for IdentifiedStructType

Fixes:

* GEP addrspace propagation
* Various installation process fixes

Patched LLVM 3.5:
The binaries from the numba binstar channel use a patched LLVM3.5 for fixing
a LLVM ELF relocation bug that is caused by the use of 32-bit relative offset
in 64-bit binaries.  The problem appears to occur more often on hardened
kernels, like in CentOS.  The patched source code is available at:
https://github.com/numba/llvm-mirror/releases/tag/3.5p1


v0.2.0 (Dec 16, 2014)
---------------------

This is the first official release. It contains a few feature additions
and bug fixes. It meets all requirements to replace llvmpy in numba and
numbapro.

v0.1.0 (Nov 13, 2014)
---------------------

This is the first release. This is released for beta testing llvmlite
and numba before the official release.
