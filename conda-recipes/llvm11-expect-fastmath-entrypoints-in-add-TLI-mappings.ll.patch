From b4e228f9b382c8fd6c932a4606e4ad436050c19b Mon Sep 17 00:00:00 2001
From: Tim Snyder <snyder.tim@gmail.com>
Date: Fri, 3 Apr 2020 11:10:00 -0500
Subject: [PATCH] expect fastmath entrypoints in  add-TLI-mappings.ll

with adjusted intel-D47188-svml-VF.patch that compiles, one of the
new tests in LLVM 10.0.0 fails because it expects SVML function
entrypoints that do not use the 'fastmath' '_ha' suffix.  However,
the beforementioned patch causes 'fastmath' entrypoints to be used
in this test.

Modifying the new test seems correct to me but I'm leaving it as a
separate patch so that it is easier for others to observe the failure
and notice this fundamentally new patch we need to make for 10.0.0
and beyond.
---
 test/Transforms/Util/add-TLI-mappings.ll | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/test/Transforms/Util/add-TLI-mappings.ll b/test/Transforms/Util/add-TLI-mappings.ll
index c68a9c9a7..c63637294 100644
--- a/test/Transforms/Util/add-TLI-mappings.ll
+++ b/test/Transforms/Util/add-TLI-mappings.ll
@@ -9,10 +9,10 @@ target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
 target triple = "x86_64-unknown-linux-gnu"

 ; COMMON-LABEL: @llvm.compiler.used = appending global
-; SVML-SAME:        [3 x i8*] [
-; SVML-SAME:          i8* bitcast (<2 x double> (<2 x double>)* @__svml_sin2 to i8*),
-; SVML-SAME:          i8* bitcast (<4 x double> (<4 x double>)* @__svml_sin4 to i8*),
-; SVML-SAME:          i8* bitcast (<8 x double> (<8 x double>)* @__svml_sin8 to i8*)
+; SVML-SAME:        [6 x i8*] [
+; SVML-SAME:          i8* bitcast (<2 x double> (<2 x double>)* @__svml_sin2_ha to i8*),
+; SVML-SAME:          i8* bitcast (<4 x double> (<4 x double>)* @__svml_sin4_ha to i8*),
+; SVML-SAME:          i8* bitcast (<8 x double> (<8 x double>)* @__svml_sin8_ha to i8*)
 ; MASSV-SAME:       [2 x i8*] [
 ; MASSV-SAME:         i8* bitcast (<2 x double> (<2 x double>)* @__sind2_massv to i8*),
 ; MASSV-SAME:         i8* bitcast (<4 x float> (<4 x float>)* @__log10f4_massv to i8*)
@@ -48,9 +48,9 @@ declare float @llvm.log10.f32(float) #0
 attributes #0 = { nounwind readnone }

 ; SVML:      attributes #[[SIN]] = { "vector-function-abi-variant"=
-; SVML-SAME:   "_ZGV_LLVM_N2v_sin(__svml_sin2),
-; SVML-SAME:   _ZGV_LLVM_N4v_sin(__svml_sin4),
-; SVML-SAME:   _ZGV_LLVM_N8v_sin(__svml_sin8)" }
+; SVML-SAME:   "_ZGV_LLVM_N2v_sin(__svml_sin2_ha),
+; SVML-SAME:   _ZGV_LLVM_N4v_sin(__svml_sin4_ha),
+; SVML-SAME:   _ZGV_LLVM_N8v_sin(__svml_sin8_ha)" }

 ; MASSV:      attributes #[[SIN]] = { "vector-function-abi-variant"=
 ; MASSV-SAME:   "_ZGV_LLVM_N2v_sin(__sind2_massv)" }
-- 
2.21.1 (Apple Git-122.3)
