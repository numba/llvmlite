{% set shortversion = "14.0" %}
{% set version = "14.0.6" %}
{% set sha256_llvm = "050922ecaaca5781fdf6631ea92bc715183f202f9d2f15147226f023414f619a" %}
{% set sha256_lld = "0c28ce0496934d37d20fec96591032dd66af8d10178a45762e0e75e85cf95ad3" %}
{% set sha256_libunwind = "3bbe9c23c73259fe39c045dc87d0b283236ba6e00750a226b2c2aeac4a51d86b" %}
{% set sha256_compiler_rt = "88df303840ca8fbff944e15e61c141226fe79f5d2b8e89fb024264d77841a02e" %}
{% set build_number = "4" %}

package:
  name: llvmdev
  version: {{ version }}

source:
  - url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version }}/llvm-{{ version }}.src.tar.xz
    fn: llvm-{{ version }}.src.tar.xz
    sha256: {{ sha256_llvm }}
    patches:
    - ../llvm14-clear-gotoffsetmap.patch
    - ../llvm14-remove-use-of-clonefile.patch
    - ../llvm14-svml.patch
  - url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version }}/lld-{{ version }}.src.tar.xz
    fn: lld-{{ version }}.src.tar.xz
    sha256: {{ sha256_lld }}

  - url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version }}/libunwind-{{ version }}.src.tar.xz
    fn: libunwind-{{ version }}.src.tar.xz
    sha256: {{ sha256_libunwind }}
    folder: unwind

  - url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version }}/compiler-rt-{{ version }}.src.tar.xz
    fn: compiler-rt-{{ version }}.src.tar.xz
    sha256: {{ sha256_compiler_rt }}
    folder: rt
    patches:
    - ../compiler-rt-14-fp-xstate-magic1.patch
    - ../compiler-rt-windows-build.patch

build:
  number: {{ build_number }}
  script_env:
    - PY_VCRUNTIME_REDIST
  ignore_run_exports:
    # Is static-linked
    - xar

requirements:
  build:
    # We cannot do this on macOS or windows
    # OSX already has llvm so has to be handled
    # at build.sh time
    # Windows needs to build using vs2015_runtime
    # irrespective of python version
    - {{ compiler('c') }} # [unix and not (armv6l or armv7l)]
    - {{ compiler('cxx') }} # [unix and not (armv6l or armv7l)]
    - cmake
    - make # [unix and not (armv6l or armv7l or aarch64)]
    # Needed to unpack the source tarball
    - m2w64-xz  # [win]
    # Needed to build LLVM
    - python >=3
  host:
    # needed for llc at runtime
    - zlib # [not win]
    - xar # [osx and x86_64]
    # llvm-lit testing needs *a* python
    - python # [not (armv6l or armv7l or aarch64 or win)]

test:
  files:
    - numba-3016.ll
  commands:
    - $PREFIX/bin/llvm-config --libs                         # [not win]
    - $PREFIX/bin/llc -version                               # [not win]

    - if not exist %LIBRARY_INC%\\llvm\\Pass.h exit 1        # [win]
    - if not exist %LIBRARY_LIB%\\LLVMSupport.lib exit 1     # [win]

    - test -f $PREFIX/include/llvm/Pass.h                    # [unix]
    - test -f $PREFIX/lib/libLLVMSupport.a                   # [unix]

    - test -f $PREFIX/lib/libLLVMCore.a                      # [not win]

    # LLD tests
    - ld.lld --version                                       # [unix]
    - lld-link /?                                            # [win]

about:
  home: http://llvm.org/
  dev_url: https://github.com/llvm-mirror/llvm
  license: NCSA
  license_file: llvm/LICENSE.TXT
  summary: Development headers and libraries for LLVM
