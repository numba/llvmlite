name: llvmlite_conda_builder

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - .github/workflows/llvmlite_conda_builder.yml
      - buildscripts/github/llvmlite_evaluate.py
  workflow_dispatch:
    inputs:
      llvmdev_run_id:
        description: 'llvmdev workflow run ID (optional)'
        required: false
        type: string
      platform:
        description: Conda Platform
        default: linux-64
        required: true
        type: choice
        options:
          - all
          - linux-64
          - linux-aarch64
          - osx-64
          - osx-arm64
          - win-64

# Add concurrency control
concurrency:
  group: >-
    ${{ github.workflow }}-
    ${{ (github.event_name == 'push' && github.ref)
      || github.event.pull_request.number
      || toJson(github.event.inputs)
      || github.sha }}
  cancel-in-progress: true

env:
  ARTIFACT_RETENTION_DAYS: 7

jobs:
  check:
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.evaluate.outputs.matrix }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: '3.13'
      - name: Evaluate
        id: evaluate
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_WORKFLOW_INPUT: ${{ toJson(github.event.inputs) }}
        run: |
          set -ex
          echo "=== Environment ==="
          echo "Event: $GITHUB_EVENT_NAME"
          echo "Inputs: $GITHUB_WORKFLOW_INPUT"
          echo "=== Running evaluation script ==="
          ./buildscripts/github/llvmlite_evaluate.py
          echo "=== Evaluation completed ==="

  build:
    needs: check
    name: ${{ matrix.platform }}-py${{ matrix.python-version }}-build
    runs-on: ${{ matrix.runner }}
    defaults:
      run:
        shell: bash -elx {0}
    strategy:
      matrix: ${{fromJson(needs.check.outputs.matrix)}}
      fail-fast: false

    steps:
      - name: Clone repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Setup platform-specific requirements
        if: matrix.platform == 'osx-64'
        run: |
          source ./buildscripts/github/setup_platform.sh "osx-64"

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@505e6394dae86d6a5c7fbb6e3fb8938e3e863830 # v3.1.1
        with:
          auto-update-conda: true
          auto-activate-base: true
          activate-environment: ""

      - name: Install conda-build
        run: conda install conda-build

      - name: Download llvmdev Artifact
        if: ${{ inputs.llvmdev_run_id != '' }}
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: llvmdev_${{ matrix.platform }}
          path: llvmdev_conda_packages
          run-id: ${{ inputs.llvmdev_run_id }}
          repository: ${{ github.repository }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build llvmlite conda package
        run: |
          if [ "${{ inputs.llvmdev_run_id }}" != "" ]; then
              LLVMDEV_CHANNEL="file:///${{ github.workspace }}/llvmdev_conda_packages"
          else
              LLVMDEV_CHANNEL="numba"
          fi
          CONDA_CHANNEL_DIR="conda_channel_dir"
          mkdir $CONDA_CHANNEL_DIR
          conda build --debug -c "$LLVMDEV_CHANNEL" -c defaults --python=${{ matrix.python-version }} conda-recipes/llvmlite --output-folder=$CONDA_CHANNEL_DIR --no-test

      - name: Upload llvmlite conda package
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: llvmlite-${{ matrix.platform }}-py${{ matrix.python-version }}
          path: conda_channel_dir
          compression-level: 0
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
          if-no-files-found: error

      - name: Show Workflow Run ID
        run: "echo \"Workflow Run ID: ${{ github.run_id }}\""

  test:
    name: ${{ matrix.platform }}-py${{ matrix.python-version }}-test
    needs: [check, build]
    runs-on: ${{ matrix.runner }}
    defaults:
      run:
        shell: bash -elx {0}
    strategy:
      matrix: ${{fromJson(needs.check.outputs.matrix)}}
      fail-fast: false

    steps:
      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@505e6394dae86d6a5c7fbb6e3fb8938e3e863830 # v3.1.1

      - name: Download llvmlite artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: llvmlite-${{ matrix.platform }}-py${{ matrix.python-version }}

      - name: Install conda-build
        run: conda install conda-build

      - name: Run tests
        run: conda build --test ${{ matrix.platform }}/llvmlite*.conda
