name: Linux Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        config:
          - {python: '3.10', flake8: true}
          - {python: '3.11', flake8: true, clang_format: true}
          - {python: '3.12', flake8: true, clang_format: true}
          - {python: '3.13', flake8: true, clang_format: true}
          - {python: '3.10', wheel: true}
          - {python: '3.11', wheel: true}
          - {python: '3.12', wheel: true}
          - {python: '3.13', wheel: true}
          - {python: '3.12', llvm: '16'}
          - {python: '3.12', opaque_pointers: 'yes'}

    env:
      CONDA_ENV: cienv
      PYTHON: ${{ matrix.config.python }}
      LLVM: ${{ matrix.config.llvm }}
      OPAQUE_POINTERS: ${{ matrix.config.opaque_pointers }}
      WHEEL: ${{ matrix.config.wheel }}
      RUN_FLAKE8: ${{ matrix.config.flake8 }}
      RUN_CLANG_FORMAT: ${{ matrix.config.clang_format }}

    steps:
    - uses: actions/checkout@v3

    - name: Install Miniconda
      run: |
        bash buildscripts/incremental/install_miniconda.sh
        echo "$HOME/miniconda3/bin" >> $GITHUB_PATH

    - name: Setup Conda Environment
      run: bash buildscripts/incremental/setup_conda_environment.sh

    - name: Build
      run: bash buildscripts/incremental/build.sh

    - name: Run Flake8
      if: matrix.config.flake8
      run: |
        export PATH=$HOME/miniconda3/bin:$PATH
        conda install -y flake8
        flake8 llvmlite

    - name: Run Tests
      run: bash buildscripts/incremental/test.sh

    - name: Check C++ formatting
      if: matrix.config.clang_format
      run: |
        export PATH=$HOME/miniconda3/bin:$PATH
        conda install -c conda-forge -y clang-format-13
        clang-format-13 -n -Werror ffi/*.cpp ffi/*.h 