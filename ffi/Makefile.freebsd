
CXX = clang++ -stdlib=libc++

# -flto and --exclude-libs allow us to remove those parts of LLVM we don't use
CXX_FLTO_FLAGS ?= -flto
LD_FLTO_FLAGS ?= -flto -Wl,--exclude-libs=ALL

ARCH := `uname -m`
CXXFLAGS := $(CPPFLAGS) $(CXXFLAGS) $(LLVM_CXXFLAGS) $(CXX_FLTO_FLAGS)
LDFLAGS := $(LDFLAGS) $(LLVM_LDFLAGS) $(LD_FLTO_FLAGS)
LIBS = $(LLVM_LIBS)
INCLUDE = core.h
SRC = assembly.cpp bitcode.cpp core.cpp initfini.cpp module.cpp value.cpp \
	executionengine.cpp transforms.cpp passmanagers.cpp targets.cpp dylib.cpp \
	linker.cpp object_file.cpp
OUTPUT = libllvmlite.so
BUILTINS_ARCHIVE = libclang_rt.builtins.a

all: $(OUTPUT) $(BUILTINS_ARCHIVE)

$(OUTPUT): $(SRC) $(INCLUDE)
	$(CXX) -shared $(CXXFLAGS) $(SRC) -o $(OUTPUT) $(LDFLAGS) $(LIBS)

$(BUILTINS_ARCHIVE):
    if [ -d "$(LLVM_LIBDIR)/clang" ]; then \
		cp $(LLVM_LIBDIR)/clang/*/lib/freebsd/libclang_rt.builtins-$(ARCH).a $(BUILTINS_ARCHIVE); \
	else \
		cp $(LLVM_LIBDIR)/freebsd/libclang_rt.builtins-$(ARCH).a $(BUILTINS_ARCHIVE); \
	fi

clean:
	rm -rf test $(BUILTINS_ARCHIVE)
