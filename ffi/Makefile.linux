# Using g++ is recommended for linking
CXX ?= g++

# -flto and --exclude-libs allow us to remove those parts of LLVM we don't use
CXX_FLTO_FLAGS ?= -flto
LD_FLTO_FLAGS ?= -flto -Wl,--exclude-libs=ALL
# -fPIC is required when compiling objects for a shared library
CXX_FPIC_FLAGS ?= -fPIC

CXXFLAGS := $(CPPFLAGS) $(CXXFLAGS) $(LLVM_CXXFLAGS) $(CXX_FLTO_FLAGS) $(CXX_FPIC_FLAGS)
LDFLAGS := $(LDFLAGS) $(LLVM_LDFLAGS) $(LD_FLTO_FLAGS)
LIBS = $(LLVM_LIBS)
INCLUDE = core.h
OBJ = assembly.o bitcode.o core.o initfini.o module.o value.o \
	  executionengine.o transforms.o passmanagers.o targets.o dylib.o \
	  linker.o object_file.o custom_passes.o
OUTPUT = libllvmlite.so

all: $(OUTPUT)

.cpp.o: $(INCLUDE)
	$(CXX) -c $(CXXFLAGS) $< -o $@

$(OUTPUT): $(OBJ)
	# static-libstdc++ avoids runtime dependencies on a
	# particular libstdc++ version.
	$(CXX) $(CXX_STATIC_LINK) -shared $(CXXFLAGS) $(OBJ) -o $(OUTPUT) $(LDFLAGS) $(LIBS)

clean:
	rm -rf test $(OUTPUT) $(OBJ)
